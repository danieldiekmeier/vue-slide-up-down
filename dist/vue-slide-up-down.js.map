{"version":3,"file":"vue-slide-up-down.js","sources":["../src/slide-up-down.js"],"sourcesContent":["export default {\n  name: 'SlideUpDown',\n\n  props: {\n    active: Boolean,\n    duration: {\n      type: Number,\n      default: 500,\n    },\n    tag: {\n      type: String,\n      default: 'div',\n    },\n  },\n\n  data: () => ({\n    scrollHeight: 0,\n  }),\n\n  render(h) {\n    return h(\n      this.tag,\n      {\n        style: this.style,\n        ref: 'container',\n      },\n      this.$slots.default,\n    );\n  },\n\n  async mounted() {\n    window.addEventListener('resize', this.getHeight); // recalc height on resize window\n    await this.$nextTick();\n    this.getHeight();\n  },\n\n  destroyed() {\n    window.removeEventListener('resize', this.getHeight);\n  },\n\n  computed: {\n    style() {\n      const heightSize = this.active ? this.scrollHeight : 0;\n\n      return {\n        overflow: 'hidden',\n        'transition-property': 'height',\n        height: `${heightSize}px`,\n        'transition-duration': `${this.duration}ms`,\n      };\n    },\n  },\n\n  methods: {\n    getHeight() {\n      const { container } = this.$refs;\n      this.scrollHeight = container.scrollHeight;\n    },\n  },\n};\n"],"names":["name","props","active","Boolean","duration","type","Number","default","tag","String","data","scrollHeight","render","h","this","style","ref","$slots","mounted","window","addEventListener","getHeight","$nextTick","then","destroyed","removeEventListener","computed","overflow","transition-property","height","transition-duration","methods","$refs"],"mappings":"AAAA,OACEA,KAAM,cAENC,OACEC,OAAQC,QACRC,UACEC,KAAMC,OACNC,QAAS,KAEXC,KACEH,KAAMI,OACNF,QAAS,QAIbG,uBACEC,aAAc,IAGhBC,gBAAOC,GACL,OAAOA,EACLC,KAAKN,KAEHO,MAAOD,KAAKC,MACZC,IAAK,aAEPF,KAAKG,OAAOV,UAIVW,mBAAO,iCAEX,OADAC,OAAOC,iBAAiB,SAAUN,KAAKO,WACjCP,KAAKQ,YAAXC,4BACAT,KAAKO,mEAGPG,qBACEL,OAAOM,oBAAoB,SAAUX,KAAKO,YAG5CK,UACEX,iBAGE,OACEY,SAAU,SACVC,sBAAuB,SACvBC,QALiBf,KAAKZ,OAASY,KAAKH,aAAe,QAMnDmB,sBAA0BhB,sBAKhCiB,SACEV,qBAEEP,KAAKH,aADiBG,KAAKkB,gBACGrB"}